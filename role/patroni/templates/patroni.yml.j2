scope: {{ scope }}
name: {{ hostvars[inventory_hostname]['db_name'] }}
restapi:
  listen: 0.0.0.0:8008
  connect_address: {{ hostvars[inventory_hostname]['ansible_host'].split(':')[0] }}:8008
etcd3:
  host: {{ groups['servers'][0] }}:2379
  host: {{ groups['servers'][1] }}:2379 
  host: {{ groups['servers'][2] }}:2379
  
  protocol: http

bootstrap:
  dcs:
    ttl: 100
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: replica
        hot_standby: "on"
        logging_collector: "on"
        max_wal_senders: 5
        max_replication_slots: 5
  initdb:
    - encoding: UTF8
    - data-checksums
  pg_hba:
    - host replication replica 127.0.0.1/32 md5
    - host replication replica {{ groups['servers'][1] }}/32 md5
    - host replication replica {{ groups['servers'][2] }}/32 md5
    - host all all 0.0.0.0/0 md5
  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb
postgresql:
  listen: {{ hostvars[inventory_hostname]['ansible_host'] }}:5432
  connect_address: {{ hostvars[inventory_hostname]['ansible_host'] }}:5432
  data_dir: /var/lib/pgsql/15/data
  bin_dir: /usr/pgsql-15/bin
  config_dir: /var/lib/pgsql/15/data
  pgpass: /var/lib/pgsql/.pgpass
  authentication:
    replication:
      username: replica
      password: replica
    superuser:
      username: postgres
      password: 'password'
    pg_monitor:
      username: svc_monitoring
      password: 'password'
  parameters:
    archive_mode: on
    archive_command: /usr/local/bin/copy_wal.sh %p %f
    archive_timeout: 600
    unix_socket_directories: '/var/run/postgresql'
    port: 5432
    shared_preload_libraries: 'pg_stat_statements'
    pg_stat_statements.track: all
    pg_stat_statements.max: 10000
    track_io_timing: on
tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false
log:
  dir: /var/log/patroni